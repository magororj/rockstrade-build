{"version":3,"sources":["Context.js","withContext.js","Components/CartItem.js","Components/HistoryChart.js","Components/Cart.js","Components/Login.js","Components/CoinsItem.js","Components/CoinsSearch.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","withContext","WrappedComponent","props","Consumer","context","CartItem","cartItem","cartKey","coin","className","src","image","alt","style","textTransform","name","current_price","shortDesc","onClick","removeFromCart","idcart","Object","values","cart","id","useState","setMarket","isLoading","setIsLoading","useEffect","a","axios","get","params","vs_currency","days","interval","then","market","console","log","data","catch","error","fetchData","cartKeys","height","curve","download","keys","length","map","key","clearCart","checkout","handleChange","e","setState","target","value","login","preventDefault","state","username","password","loggedIn","this","user","to","onSubmit","type","onChange","Component","CoinsItem","price","addToCart","amount","coins","search","setSearch","filteredCoins","filter","toLowerCase","includes","placeholder","index","App","alert","localStorage","setItem","JSON","stringify","removeItem","routerRef","current","history","push","email","post","res","status","message","jwt_decode","accessToken","token","accessLevel","logout","createRef","getItem","parse","Provider","ref","role","aria-label","aria-expanded","data-target","showMenu","aria-hidden","marginLeft","exact","path","component","Login","Cart","CoinsSearch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ac966f7.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Context = React.createContext({});\r\nexport default Context;","import React from \"react\";\r\nimport Context from \"./Context\";\r\n\r\nconst withContext = WrappedComponent => {\r\n    const WithHOC = props => {\r\n        return (\r\n            <Context.Consumer>\r\n                {context => <WrappedComponent {...props} context={context}/>}\r\n            </Context.Consumer>\r\n        );\r\n    };\r\n    return WithHOC;\r\n};\r\n\r\nexport default withContext;","import React from \"react\";\r\n\r\nconst CartItem = props => {\r\n    const { cartItem, cartKey } = props;\r\n\r\n    const { coin } = cartItem;\r\n    return (\r\n        <div className=\" column is-half\">\r\n            <div className=\"box\">\r\n                <div className=\"media\">\r\n                    <div className=\"media-left\">\r\n                        <figure className=\"image is-64x64\">\r\n                        <img src={coin.image} alt='crypto' />\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"media-content\">\r\n                        <b style={{ textTransform: \"capitalize\"}}>\r\n                            {coin.name}{\" \"}\r\n                            <span className=\"tag is-primary\">${coin.current_price}</span>\r\n                        </b>\r\n                        <div>{coin.shortDesc}</div>\r\n                        \r\n                    </div>\r\n                    <div\r\n                        className=\"media-right\"\r\n                        onClick={() => props.removeFromCart(cartKey)}\r\n                        >\r\n                            <span className=\"delete is-large\"></span>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { LineChart } from 'react-chartkick';\r\nimport 'chart.js';\r\nimport withContext from '../withContext';\r\n\r\nconst HistoryChart = props => {\r\n    const idcart= Object.values(props.cart)[0].coin.id;\r\n    const [market, setMarket] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n   \r\nuseEffect(() => {\r\n   \r\n    const fetchData = async () => {\r\n        setIsLoading(true);\r\n        await axios.get(`https://api.coingecko.com/api/v3/coins/${idcart}/market_chart/`, \r\n        {params: {\r\n            vs_currency:\"brl\",\r\n            days:\"7\",\r\n            interval: \"daily\"\r\n        },})\r\n                  .then(market => {\r\n                                setMarket({market});\r\n                                console.log(market.data);\r\n                                \r\n                                })\r\n                  .catch(error => console.log(error));\r\n                  setIsLoading(false);\r\n    }\r\n\r\n    fetchData(); \r\n    console.log(props.cartKeys);\r\n    console.log(idcart);\r\n}, [props.cartKeys])\r\n\r\n    \r\n//new Chartkick.LineChart(\"chart-7\", [\r\n//{\"name\":\"BitCoin\",\"data\":{\"2013-02-10\":3,\"2013-02-17\":3,\"2013-02-24\":3,\"2013-03-03\":1,\"2013-03-10\":4,\"2013-03-17\":3,\"2013-03-24\":2,\"2013-03-31\":3}},\r\n//{\"name\":\"Ethereum\",\"data\":{\"2013-02-10\":0,\"2013-02-17\":0,\"2013-02-24\":0,\"2013-03-03\":0,\"2013-03-10\":2,\"2013-03-17\":1,\"2013-03-24\":0,\"2013-03-31\":0}},\r\n//{\"name\":\"Tether\",\"data\":{\"2013-02-10\":0,\"2013-02-17\":1,\"2013-02-24\":0,\"2013-03-03\":0,\"2013-03-10\":0,\"2013-03-17\":1,\"2013-03-24\":0,\"2013-03-31\":1}},\r\n//{});\r\n\r\nconst Data = [\r\n    {\"name\":\"BitCoin\",\"data\":{\"2013-02-10\":3,\"2013-02-17\":3,\"2013-02-24\":3,\"2013-03-03\":1,\"2013-03-10\":4,\"2013-03-17\":3,\"2013-03-24\":2,\"2013-03-31\":3}},\r\n    {\"name\":\"Ethereum\",\"data\":{\"2013-02-10\":0,\"2013-02-17\":0,\"2013-02-24\":0,\"2013-03-03\":0,\"2013-03-10\":2,\"2013-03-17\":1,\"2013-03-24\":0,\"2013-03-31\":0}},\r\n    {\"name\":\"Tether\",\"data\":{\"2013-02-10\":0,\"2013-02-17\":1,\"2013-02-24\":0,\"2013-03-03\":0,\"2013-03-10\":0,\"2013-03-17\":1,\"2013-03-24\":0,\"2013-03-31\":1}}\r\n  ];\r\n    return (\r\n        <div>\r\n            <h1>History Chart</h1>\r\n            {isLoading ? (<div className=\"is-align-content-center\"> Loading...</div>) :\r\n            ( <LineChart data={Data} height=\"200px\" curve={false} download={true}/> )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withContext(HistoryChart);","import React from \"react\";\r\nimport withContext from \"../withContext\";\r\nimport CartItem from \"./CartItem\";\r\nimport HistoryChart from \"./HistoryChart\";\r\nimport './Cart.css';\r\n\r\nconst Cart = props => {\r\n  const { cart } = props.context;\r\n  const cartKeys = Object.keys(cart || {});\r\n  return(\r\n    <>\r\n      <div className=\"hero is-primary\">\r\n        <div className=\"hero-body container\">\r\n          <h4 className=\"title\">Coins Selected </h4>\r\n        </div>\r\n      </div>\r\n      <br/>\r\n      <div className=\"container historychart\">\r\n        { cartKeys.length ? (\r\n        <HistoryChart\r\n          cart = {cart}\r\n          cartKeys={cartKeys}\r\n        />\r\n        ) : ( null )}\r\n        \r\n      </div>\r\n      <div className=\"container\">\r\n        { cartKeys.length ? (\r\n          <div className=\"column columns is-multiline\">\r\n            {cartKeys.map(key => (\r\n              <CartItem\r\n                cartKey={key}\r\n                key={key}\r\n                cartItem={cart[key]}\r\n                removeFromCart={props.context.removeFromCart}\r\n                />\r\n            ))}\r\n        <div className=\"column is-12 is-clearfix\">\r\n          <br/>\r\n          <div className=\"is-pulled-right\">\r\n            <button\r\n              onClick={props.context.clearCart}\r\n              className=\"button is-warning\">\r\n                Clear selection\r\n              </button>{\" \"}\r\n              <button\r\n                onClick={props.context.checkout}\r\n                className=\"button is-success\">\r\n                  Nada ainda definido\r\n                </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        ) : (\r\n          <div className=\"column\">\r\n            <div className=\"title has-text-grey-light\">No Coins selected.</div>\r\n          </div>\r\n        )}\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withContext(Cart);","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport withContext from \"../withContext\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\nhandleChange = e => this.setState({ [e.target.name]: e.target.value, error: \"\"});\r\n\r\nlogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, password } = this.state;\r\n    if (!username || !password) {\r\n      return this.setState({ error: \"Preencha todos os campos!\" });\r\n    }\r\n    this.props.context.login(username, password)\r\n      .then((loggedIn) => {\r\n        if (!loggedIn) {\r\n          this.setState({ error: \"Credenciais incorretas\" });\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return !this.props.context.user ? (\r\n      <>\r\n        <div className=\"hero is-success \">\r\n          <div className=\"hero-body container\">\r\n            <h4 className=\"title \">Login</h4>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <form onSubmit={this.login}>\r\n          <div className=\"columns is-mobile is-centered\">\r\n            <div className=\"column is-one-third\">\r\n              <div className=\"field\">\r\n                <label className=\"label\">Email: </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"email\"\r\n                  name=\"username\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Password: </label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              {this.state.error && (\r\n                <div className=\"has-text-danger\">{this.state.error}</div>\r\n              )}\r\n              <div className=\"field is-clearfix\">\r\n                <button\r\n                  className=\"button is-primary is-outlined is-pulled-right\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </>\r\n    ) : (\r\n      <Redirect to=\"/coins-search\" />\r\n    );\r\n  }\r\n}\r\nexport default withContext(Login);","import React from \"react\";\r\n\r\nconst CoinsItem = props => {\r\n  const { coin } = props;\r\n  return (\r\n    <div className=\" column is-half\">\r\n      <div className=\"box\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-64x64\">\r\n            <img src={coin.image} alt='crypto' />\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <b style={{ textTransform: \"capitalize\" }}>\r\n              {coin.name}{\" \"}\r\n              <span className=\"tag is-primary\">${coin.price}</span>\r\n            </b>\r\n            <div>{coin.shortDesc}</div>\r\n            {/* {product.stock > 0 ? (\r\n              <small>{product.stock + \" Available\"}</small>\r\n            ) : (\r\n              <small className=\"has-text-danger\">Out Of Stock</small>\r\n            )} */}\r\n            <div className=\"is-clearfix\">\r\n              <button\r\n                className=\"button is-small is-outlined is-primary   is-pulled-right\"\r\n                onClick={() =>\r\n                  props.addToCart({\r\n                    id: coin.name,\r\n                    coin,\r\n                    amount: 1\r\n                  })\r\n                }\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinsItem;","import React, {useState} from \"react\";\r\nimport CoinsItem from \"./CoinsItem\";\r\nimport withContext from \"../withContext\";\r\nimport  \"./CoinsSearch.css\";\r\n\r\nconst CoinsSearch = props => {\r\n    const { coins } = props.context;\r\n    const [search, setSearch] = useState('');\r\n\r\n\r\n    const handleChange = e => {\r\n      setSearch(e.target.value);\r\n    };\r\n    const filteredCoins = coins.filter(coin =>\r\n      coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  \r\n\r\n    return (\r\n      <>\r\n        <div className=\"hero is-primary\">\r\n          <div className=\"hero-body container\">\r\n            <h4 className=\"title\">Search Coins</h4>\r\n            <form>\r\n          <input\r\n            className='coin-input'\r\n            type='text'\r\n            onChange={handleChange}\r\n            placeholder='Search'\r\n          />\r\n        </form>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"container\">\r\n          <div className=\"column columns is-multiline\">\r\n          \r\n            {filteredCoins && filteredCoins.length ? (\r\n              filteredCoins.map((coin, index) => (\r\n               <CoinsItem\r\n                  coin={coin}\r\n                  key={index}\r\n                  addToCart={props.context.addToCart}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div className=\"column\">\r\n                <span className=\"title has-text-grey-light\">\r\n                No coins found\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default withContext(CoinsSearch);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, Link, BrowserRouter as Router} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport Cart from './Components/Cart';\r\nimport Login from './Components/Login';\r\nimport CoinsSearch from './Components/CoinsSearch';\r\n\r\nimport Context from './Context';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      cart: {},\r\n      coins: []\r\n    };\r\n    this.routerRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let user = localStorage.getItem(\"user\");\r\n    let cart = localStorage.getItem(\"cart\");\r\n\r\n    await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=brl&order=market_cap_desc&page=1&sparkline=false')\r\n                  .then(coins => {\r\n                                this.setState({coins: coins.data});\r\n                                \r\n                                })\r\n                  .catch(error => console.log(error));\r\n                  \r\n    user = user ? JSON.parse(user) : null;\r\n    cart = cart? JSON.parse(cart) : {};\r\n\r\n    this.setState({ user, cart });\r\n  }\r\n\r\n  /* //adding a Product\r\n\r\n  addProduct = (product, callback) => {\r\n    let products = this.state.products.slice();\r\n    products.push(product);\r\n    this.setState({ products }, () => callback && callback());\r\n  };\r\n */\r\n\r\n  // add to cart\r\n\r\n  addToCart = cartItem => {\r\n    let cart = this.state.cart;\r\n    if ( Object.keys(this.state.cart).length  >= 3) {\r\n      // cart[cartItem.id].amount += cartItem.amount;\r\n      alert(\"Just only 3 coins to compair\");\r\n\r\n    }else{\r\n      cart[cartItem.id] = cartItem;\r\n    }\r\n\r\n    /* if (cart[cartItem.id].amount > cart[cartItem.id].coin.stock){\r\n      cart[cartItem.id].amount = cart[cartItem.id].coin.stock;\r\n    } */\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  this.setState({cart});\r\n};\r\n  \r\nremoveFromCart = cartItem => {\r\n  let cart = this.state.cart;\r\n  delete cart[cartItem];\r\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  this.setState({ cart });\r\n};\r\n\r\nclearCart = () => {\r\n  let cart = {};\r\n  localStorage.removeItem(\"cart\");\r\n  this.setState({ cart });\r\n};\r\n\r\n\r\ncheckout = () => {\r\n  if (!this.state.user) {\r\n    this.routerRef.current.history.push(\"/login\");\r\n    return;\r\n  }\r\n\r\n  const cart = this.state.cart;\r\n\r\n  /* const coins = this.state.coins.map(p => {\r\n    if (cart[p.name]) {\r\n      p.stock = p.stock - cart[p.name].amount;\r\n      \r\n      axios.put(\r\n        `http://localhost:3001/products/${p.id}`,\r\n        { ...p },\r\n      )\r\n    \r\n    }\r\n    return p;\r\n  });\r\n\r\n  this.setState({ coins }); */\r\n  this.clearCart();\r\n};\r\n\r\n\r\n  login = async (email, password) => {\r\n    const res = await axios.post(\r\n      'http://localhost:3001/login',\r\n      {email, password },\r\n    ).catch((res) => {\r\n      return { status: 401, message: 'Não Autorizado'}\r\n    })\r\n\r\n    if(res.status === 200 ) {\r\n      const { email } = jwt_decode(res.data.accessToken)\r\n      const user = {\r\n        email,\r\n        token: res.data.accessToken,\r\n        accessLevel: email === 'admin@example.com' ? 0 : 1\r\n      }\r\n\r\n      this.setState({ user });\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  logout = e => {\r\n    e.preventDefault();\r\n    this.setState({ user: null });\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <Context.Provider\r\n          value={{\r\n            ...this.state,\r\n            removeFromCart: this.removeFromCart,\r\n            addToCart: this.addToCart,\r\n            login: this.login,\r\n            clearCart: this.clearCart,\r\n            checkout: this.checkout\r\n          }}\r\n      >\r\n        <Router ref={this.routerRef}>\r\n          <div className=\"App\">\r\n          <nav\r\n            className=\"navbar container\"\r\n            role=\"navigation\"\r\n            aria-label=\"main navigation\"\r\n          >\r\n            <div className=\"navbar-brand\">\r\n              <b className=\"navbar-item is-size-4 has-text-success-dark\">Rock's Trader</b>\r\n              <label\r\n                role=\"button\"\r\n                className=\"navbar-burger burger\"\r\n                aria-label=\"menu\"\r\n                aria-expanded=\"false\"\r\n                data-target=\"navbarBasicExample\"\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  this.setState({ showMenu: !this.state.showMenu });\r\n                }}\r\n              >\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n              </label>\r\n            </div>\r\n              <div className={`navbar-menu ${\r\n                  this.state.showMenu ? \"is-active\" : \"\"\r\n                }`}>\r\n                <Link to=\"/coins-search\" className=\"navbar-item\">\r\n                  Coins\r\n                </Link>\r\n                \r\n                <Link to=\"/cart\" className=\"navbar-item\">\r\n                  Coins Selected\r\n                  <span\r\n                    className=\"tag is-primary\"\r\n                    style={{ marginLeft: \"5px\" }}\r\n                  >\r\n                    { Object.keys(this.state.cart).length }\r\n                  </span>\r\n                </Link>\r\n                {!this.state.user ? (\r\n                  <Link to=\"/login\" className=\"navbar-item\">\r\n                    Login\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/\" onClick={this.logout} className=\"navbar-item\">\r\n                    Logout\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </nav>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/cart\" component={Cart} />\r\n              <Route exact path=\"/coins-search\" component={CoinsSearch} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bulma/css/bulma.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}